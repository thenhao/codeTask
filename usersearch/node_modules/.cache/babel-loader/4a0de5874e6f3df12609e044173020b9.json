{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Software Developer Immersive\\\\Project\\\\Task\\\\usersearch\\\\src\\\\component\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './search.css';\nimport useDebounce from './debounce';\nimport ProfileContainer from './profileContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  //not in use\n  const [value, setValue] = useState(''); //currently in use\n\n  const [users, setUsers] = useState([]);\n  const [text, setText] = useState('');\n  const [suggestions, setSuggetions] = useState([]); //searchterm\n\n  const [searchResult, setSearchResult] = useState([]); //true/false for debouncing\n  // const [debouncingTimeValue, setDebouncingTimeValue] = useState(0);\n\n  useEffect(() => {\n    let matches = [];\n    matches = users.filter(user => {\n      const regex = new RegExp(`${text}`, \"gi\"); //console.log(user.login);\n\n      return user.login.match(regex);\n    });\n    setSuggetions(matches);\n  }, [users]);\n\n  function onTextChange(e) {\n    if (e.target.value.length < 1) {\n      setText('');\n      setSuggetions([]);\n      setUsers([]);\n    }\n\n    setText(e.target.value);\n  }\n\n  function onSuggest(e) {\n    console.log(e.target.textContent);\n    setText(e.target.textContent);\n    setSuggetions([]);\n  }\n\n  function whenBlur() {\n    console.log(\"clicked outside of div\");\n    setTimeout(() => {\n      setSuggetions([]);\n    }, 100);\n  }\n\n  function prepSearchQuery(text) {\n    const textUrl = `https://api.github.com/search/users?q=${text}`;\n    return encodeURI(textUrl);\n  }\n\n  async function searchApi() {\n    if (!text || text === '') return;\n    const URL = prepSearchQuery(text);\n    console.log(URL);\n    const response = await axios.get(URL).catch(err => {\n      console.log(err);\n    });\n    setUsers(response.data.items);\n  }\n\n  useDebounce(text, 500, searchApi); // useEffect(()=>{\n  //     fetch('/').then(res => {\n  //         if(res.ok){\n  //             return res.json()\n  //         }\n  //     })\n  //     .then(response=>{\n  //         setValue(response.user);\n  //         console.log(response);\n  //     }).catch((err)=>{\n  //         console.log(err);\n  //     })\n  // }, [])\n  // async function searchTerm(){\n  //     //const response = await fetch('/getUser');\n  //     const response = await fetch('/');\n  //     const result = await response.json();\n  //     if(response.status !==200){\n  //         throw Error(result.message);\n  //     }\n  //     console.log('Result is ',result);\n  //     //setValue(result.data);\n  //     setValue(result);\n  // }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!text || text === '') return;\n    const regex = new RegExp(\"\\\\s\", 'g');\n\n    if (text.match(regex)) {\n      console.log('this regex fired');\n      setUsers([]);\n      setText('');\n      setSuggetions([]);\n      setSearchResult([]);\n      return;\n    }\n\n    const response = await fetch('/searchUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        searchTerm: text\n      })\n    });\n    const result = await response.json(); //const result = await response;\n    //console.log('search result is',result);\n\n    setSearchResult(result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onTextChange,\n        onBlur: whenBlur,\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), suggestions && suggestions.map((suggestion, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion\",\n          onClick: onSuggest,\n          children: suggestion.login\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 24\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ProfileContainer, {\n        searchResult: searchResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Search, \"V+K7sUkv+Mw3D1ovVRHRhGcMIQ0=\", false, function () {\n  return [useDebounce];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Software Developer Immersive/Project/Task/usersearch/src/component/search.js"],"names":["React","useState","useEffect","axios","useDebounce","ProfileContainer","Search","value","setValue","users","setUsers","text","setText","suggestions","setSuggetions","searchResult","setSearchResult","matches","filter","user","regex","RegExp","login","match","onTextChange","e","target","length","onSuggest","console","log","textContent","whenBlur","setTimeout","prepSearchQuery","textUrl","encodeURI","searchApi","URL","response","get","catch","err","data","items","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","searchTerm","result","json","map","suggestion","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './search.css'\r\nimport useDebounce from './debounce';\r\nimport ProfileContainer from './profileContainer';\r\n\r\n\r\nfunction Search(){\r\n    //not in use\r\n    const [value, setValue] = useState('');\r\n    //currently in use\r\n    const [users, setUsers] = useState([]);\r\n    const [text, setText] = useState('');\r\n    const [suggestions, setSuggetions] = useState([]);\r\n    //searchterm\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    //true/false for debouncing\r\n    // const [debouncingTimeValue, setDebouncingTimeValue] = useState(0);\r\n\r\n    \r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n        let matches= [];\r\n        matches = users.filter(user=>{\r\n            const regex = new RegExp(`${text}`, \"gi\");\r\n            //console.log(user.login);\r\n            return user.login.match(regex);\r\n        });\r\n        \r\n        setSuggetions(matches);\r\n\r\n    },[users]);\r\n\r\n    \r\n\r\n    function onTextChange(e){\r\n           \r\n        if(e.target.value.length < 1){\r\n            setText('');\r\n            setSuggetions([]);\r\n            setUsers([]);\r\n        }\r\n        \r\n        setText(e.target.value);\r\n    }\r\n\r\n    function onSuggest(e){\r\n        console.log(e.target.textContent);\r\n        setText(e.target.textContent);\r\n        setSuggetions([]);\r\n        \r\n    }\r\n\r\n    function whenBlur(){\r\n        \r\n        console.log(\"clicked outside of div\");\r\n        setTimeout(()=>{\r\n            setSuggetions([]);\r\n        }, 100);\r\n    }\r\n\r\n    function prepSearchQuery(text){\r\n        const textUrl = `https://api.github.com/search/users?q=${text}`;\r\n        return encodeURI(textUrl);\r\n    }\r\n\r\n    async function searchApi(){\r\n        if(!text || text === '')\r\n        return;\r\n        const URL = prepSearchQuery(text);\r\n        console.log(URL);\r\n        const response = await axios.get(URL).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n        setUsers(response.data.items);\r\n    }\r\n\r\n    \r\n    useDebounce(text, 500, searchApi);\r\n   \r\n    \r\n\r\n\r\n    \r\n    // useEffect(()=>{\r\n    //     fetch('/').then(res => {\r\n    //         if(res.ok){\r\n    //             return res.json()\r\n    //         }\r\n    //     })\r\n    //     .then(response=>{\r\n    //         setValue(response.user);\r\n    //         console.log(response);\r\n    //     }).catch((err)=>{\r\n    //         console.log(err);\r\n    //     })\r\n        \r\n    // }, [])\r\n\r\n    // async function searchTerm(){\r\n    //     //const response = await fetch('/getUser');\r\n    //     const response = await fetch('/');\r\n    //     const result = await response.json();\r\n\r\n    //     if(response.status !==200){\r\n    //         throw Error(result.message);\r\n    //     }\r\n    //     console.log('Result is ',result);\r\n    //     //setValue(result.data);\r\n    //     setValue(result);\r\n    // }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(!text || text === '')\r\n        return;\r\n    \r\n        const regex = new RegExp(\"\\\\s\", 'g');\r\n        if(text.match(regex)){\r\n            console.log('this regex fired');\r\n            setUsers([]);\r\n            setText('');\r\n            setSuggetions([]);\r\n            setSearchResult([]);\r\n            return;\r\n        }\r\n        \r\n        \r\n\r\n\r\n        const response = await fetch('/searchUser', {\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({searchTerm:text})\r\n        });\r\n\r\n        const result = await response.json();\r\n        //const result = await response;\r\n        //console.log('search result is',result);\r\n        setSearchResult(result);\r\n    }\r\n\r\n    return(<div>\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{value}</h1>\r\n            <input type=\"text\"\r\n            onChange={onTextChange}\r\n            onBlur={whenBlur} \r\n            value={text}/>\r\n            {/* <button onClick={searchTerm}>Search</button> */}\r\n            <button >Search</button>\r\n            {suggestions && suggestions.map((suggestion,i)=>{\r\n                return <div className='suggestion' key={i} onClick={onSuggest}>{suggestion.login}</div>\r\n            })}\r\n             <ProfileContainer searchResult={searchResult}/>\r\n        </form>\r\n    </div>)\r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}